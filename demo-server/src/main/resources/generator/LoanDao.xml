<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dal.mapper.LoanDao">
  <resultMap id="BaseResultMap" type="com.example.demo.dal.bean.Loan">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="interest" jdbcType="INTEGER" property="interest" />
    <result column="duration" jdbcType="INTEGER" property="duration" />
    <result column="interest_type" jdbcType="TINYINT" property="interestType" />
    <result column="duration_type" jdbcType="TINYINT" property="durationType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, amount, interest, duration, interest_type, duration_type
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.dal.bean.LoanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from loan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from loan
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from loan
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.dal.bean.LoanExample">
    delete from loan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.demo.dal.bean.Loan" useGeneratedKeys="true">
    insert into loan (amount, interest, duration, 
      interest_type, duration_type)
    values (#{amount,jdbcType=INTEGER}, #{interest,jdbcType=INTEGER}, #{duration,jdbcType=INTEGER}, 
      #{interestType,jdbcType=TINYINT}, #{durationType,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.demo.dal.bean.Loan" useGeneratedKeys="true">
    insert into loan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="amount != null">
        amount,
      </if>
      <if test="interest != null">
        interest,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="interestType != null">
        interest_type,
      </if>
      <if test="durationType != null">
        duration_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="interest != null">
        #{interest,jdbcType=INTEGER},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="interestType != null">
        #{interestType,jdbcType=TINYINT},
      </if>
      <if test="durationType != null">
        #{durationType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.dal.bean.LoanExample" resultType="java.lang.Long">
    select count(*) from loan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update loan
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.interest != null">
        interest = #{record.interest,jdbcType=INTEGER},
      </if>
      <if test="record.duration != null">
        duration = #{record.duration,jdbcType=INTEGER},
      </if>
      <if test="record.interestType != null">
        interest_type = #{record.interestType,jdbcType=TINYINT},
      </if>
      <if test="record.durationType != null">
        duration_type = #{record.durationType,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update loan
    set id = #{record.id,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=INTEGER},
      interest = #{record.interest,jdbcType=INTEGER},
      duration = #{record.duration,jdbcType=INTEGER},
      interest_type = #{record.interestType,jdbcType=TINYINT},
      duration_type = #{record.durationType,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.dal.bean.Loan">
    update loan
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="interest != null">
        interest = #{interest,jdbcType=INTEGER},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="interestType != null">
        interest_type = #{interestType,jdbcType=TINYINT},
      </if>
      <if test="durationType != null">
        duration_type = #{durationType,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.dal.bean.Loan">
    update loan
    set amount = #{amount,jdbcType=INTEGER},
      interest = #{interest,jdbcType=INTEGER},
      duration = #{duration,jdbcType=INTEGER},
      interest_type = #{interestType,jdbcType=TINYINT},
      duration_type = #{durationType,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>